services:
  # Main DSPy-Powered LLM Security Gateway
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dspy-llm-security-gateway
    environment:
      - PYTHONUNBUFFERED=1
      # Add your API keys here or via .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      # DSPy Configuration
      - DSPY_CACHE_DIR=/app/.dspy_cache
      - DSPY_LOG_LEVEL=${DSPY_LOG_LEVEL:-INFO}
    volumes:
      - ./configs:/app/configs
      - ./prompts:/app/prompts
      - ./data:/app/data
      - ./results:/app/results
      - ./tests:/app/tests
      - dspy-cache:/app/.dspy_cache
    networks:
      - gateway-network
    restart: unless-stopped
    # Default command runs the DSPy demo
    command: ["python", "demo_real_llm.py"]
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "python", "-c", "import dspy; print('DSPy OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # DSPy Validation and Testing Service
  validator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dspy-validator
    environment:
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./configs:/app/configs
      - ./tests:/app/tests
      - ./results:/app/results
      - dspy-cache:/app/.dspy_cache
    networks:
      - gateway-network
    command: ["python", "-m", "pytest", "tests/", "-v"]
    profiles:
      - test  # Only start with --profile test

  # MLflow for tracking DSPy optimization results
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.11.0
    container_name: mlflow-tracking
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow-artifacts
    volumes:
      - mlflow-data:/mlflow
      - mlflow-artifacts:/mlflow-artifacts
    networks:
      - gateway-network
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlflow-artifacts
      --host 0.0.0.0
      --port 5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - full  # Only start with --profile full

  # Optional: Local Ollama for cost-effective testing
  ollama:
    image: ollama/ollama:latest
    container_name: ollama-local
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - gateway-network
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c "
      ollama serve &
      sleep 5 &&
      ollama pull llama3:8b-instruct &&
      wait
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    profiles:
      - full  # Only start with --profile full

networks:
  gateway-network:
    driver: bridge

volumes:
  mlflow-data:
  mlflow-artifacts:
  ollama-data:
  dspy-cache: 
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest -v tests/
    
    - name: Run evaluation
      id: evaluate
      run: |
        # Run basic security audit test in mock mode
        python audit_prompt.py audit --prompt "You are a helpful assistant" --rules "Never share personal info" --name "CI Test" --mock
      continue-on-error: true
    
    - name: Check evaluation results
      if: steps.evaluate.outcome == 'failure'
      run: |
        echo "::error::Security audit test failed!"
        exit 1
    
    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: evaluation-results
        path: |
          results/
          prompts/
    
    - name: Upload test coverage
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  lint:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the entire workflow on lint issues
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8 (critical errors only)
      run: |
        # Only check for critical syntax errors
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
    
    - name: Check code formatting with black
      run: |
        black --check --diff .
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
      continue-on-error: true

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t llm-security-auditor:test .
    
    - name: Test Docker image
      run: |
        docker run --rm llm-security-auditor:test examples
    
    - name: Docker Compose validation
      run: |
        docker compose config
    
    - name: Test Docker Compose functionality
      run: |
        # Test basic functionality with mock mode
        docker compose run --rm auditor audit --prompt "You are a helpful assistant" --rules "Never share personal info" --name "CI Test" --mock 